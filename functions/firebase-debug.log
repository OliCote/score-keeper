[debug] [2022-09-26T20:02:22.754Z] ----------------------------------------------------------------------
[debug] [2022-09-26T20:02:22.756Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\olico\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start --import=./emulated_data --export-on-exit=./emulated_data
[debug] [2022-09-26T20:02:22.757Z] CLI Version:   11.0.1
[debug] [2022-09-26T20:02:22.757Z] Platform:      win32
[debug] [2022-09-26T20:02:22.757Z] Node Version:  v16.17.1
[debug] [2022-09-26T20:02:22.757Z] Time:          Mon Sep 26 2022 16:02:22 GMT-0400 (Eastern Daylight Saving Time)
[debug] [2022-09-26T20:02:22.758Z] ----------------------------------------------------------------------
[debug] 
[debug] [2022-09-26T20:02:22.761Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2022-09-26T20:02:22.847Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2022-09-26T20:02:22.847Z] > authorizing via signed-in user (olivier@orphic.ca)
[debug] [2022-09-26T20:02:22.974Z] java version "18.0.1.1" 2022-04-22
Java(TM) SE Runtime Environment (build 18.0.1.1+2-6)

[debug] [2022-09-26T20:02:22.974Z] Java HotSpot(TM) 64-Bit Server VM (build 18.0.1.1+2-6, mixed mode, sharing)

[debug] [2022-09-26T20:02:22.991Z] Parsed Java major version: 18
[info] i  emulators: Starting emulators: auth, functions, firestore, hosting {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, functions, firestore, hosting"}}
[debug] [2022-09-26T20:02:23.001Z] [hub] writing locator at C:\Users\olico\AppData\Local\Temp\hub-score-keeper-2e98b.json
[warn] !  functions: The following emulators are not running, calls to these services from the Functions emulator will affect production: database, pubsub, storage {"metadata":{"emulator":{"name":"functions"},"message":"The following emulators are not running, calls to these services from the Functions emulator will affect production: \u001b[1mdatabase, pubsub, storage\u001b[22m"}}
[info] +  functions: Using node@16 from host. {"metadata":{"emulator":{"name":"functions"},"message":"Using node@16 from host."}}
[debug] [2022-09-26T20:02:23.032Z] defaultcredentials: writing to file C:\Users\olico\AppData\Roaming\firebase\olivier_orphic_ca_application_default_credentials.json
[debug] [2022-09-26T20:02:23.033Z] Setting GAC to C:\Users\olico\AppData\Roaming\firebase\olivier_orphic_ca_application_default_credentials.json {"metadata":{"emulator":{"name":"functions"},"message":"Setting GAC to C:\\Users\\olico\\AppData\\Roaming\\firebase\\olivier_orphic_ca_application_default_credentials.json"}}
[debug] [2022-09-26T20:02:23.034Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/score-keeper-2e98b/adminSdkConfig [none]
[debug] [2022-09-26T20:02:26.025Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2022-09-26T20:02:26.025Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2022-09-26T20:02:26.353Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/score-keeper-2e98b/adminSdkConfig 200
[debug] [2022-09-26T20:02:26.353Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/score-keeper-2e98b/adminSdkConfig {"projectId":"score-keeper-2e98b","storageBucket":"score-keeper-2e98b.appspot.com","locationId":"us-central"}
[info] i  firestore: Importing data from F:\Orphic\Just for fun\score-keeper\functions\emulated_data\firestore_export\firestore_export.overall_export_metadata {"metadata":{"emulator":{"name":"firestore"},"message":"Importing data from F:\\Orphic\\Just for fun\\score-keeper\\functions\\emulated_data\\firestore_export\\firestore_export.overall_export_metadata"}}
[debug] [2022-09-26T20:02:26.364Z] Ignoring unsupported arg: projectId {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: projectId"}}
[debug] [2022-09-26T20:02:26.364Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2022-09-26T20:02:26.364Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\olico\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.14.3.jar","--host","127.0.0.1","--port",8080,"--seed_from_export","F:\\Orphic\\Just for fun\\score-keeper\\functions\\emulated_data\\firestore_export\\firestore_export.overall_export_metadata","--rules","F:\\Orphic\\Just for fun\\score-keeper\\firestore.rules","--functions_emulator","localhost:5001"],"optionalArgs":["port","webchannel_port","host","rules","functions_emulator","seed_from_export"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\olico\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.14.3.jar\",\"--host\",\"127.0.0.1\",\"--port\",8080,\"--seed_from_export\",\"F:\\\\Orphic\\\\Just for fun\\\\score-keeper\\\\functions\\\\emulated_data\\\\firestore_export\\\\firestore_export.overall_export_metadata\",\"--rules\",\"F:\\\\Orphic\\\\Just for fun\\\\score-keeper\\\\firestore.rules\",\"--functions_emulator\",\"localhost:5001\"],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"functions_emulator\",\"seed_from_export\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[info] i  auth: Importing config from F:\Orphic\Just for fun\score-keeper\functions\emulated_data\auth_export\config.json {"metadata":{"emulator":{"name":"database"},"message":"Importing config from F:\\Orphic\\Just for fun\\score-keeper\\functions\\emulated_data\\auth_export\\config.json"}}
[info] i  auth: Importing accounts from F:\Orphic\Just for fun\score-keeper\functions\emulated_data\auth_export\accounts.json {"metadata":{"emulator":{"name":"database"},"message":"Importing accounts from F:\\Orphic\\Just for fun\\score-keeper\\functions\\emulated_data\\auth_export\\accounts.json"}}
[debug] [2022-09-26T20:02:34.886Z] >>> [apiv2][query] GET https://firebasehosting.googleapis.com/v1beta1/projects/score-keeper-2e98b/sites 
[debug] [2022-09-26T20:02:38.469Z] <<< [apiv2][status] GET https://firebasehosting.googleapis.com/v1beta1/projects/score-keeper-2e98b/sites 200
[debug] [2022-09-26T20:02:38.469Z] <<< [apiv2][body] GET https://firebasehosting.googleapis.com/v1beta1/projects/score-keeper-2e98b/sites {"sites":[{"name":"projects/score-keeper-2e98b/sites/score-keeper-2e98b","defaultUrl":"https://score-keeper-2e98b.web.app","type":"DEFAULT_SITE"}]}
[debug] [2022-09-26T20:02:38.469Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/score-keeper-2e98b/webApps/-/config [none]
[debug] [2022-09-26T20:02:41.953Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/score-keeper-2e98b/webApps/-/config 200
[debug] [2022-09-26T20:02:41.953Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/score-keeper-2e98b/webApps/-/config {"projectId":"score-keeper-2e98b","appId":"1:721601043647:web:7c003f55422337b26cfa0a","storageBucket":"score-keeper-2e98b.appspot.com","locationId":"us-central","apiKey":"AIzaSyDnr0BGh7FJQuiPd0SBufNTuu_JSTlKXEA","authDomain":"score-keeper-2e98b.firebaseapp.com","messagingSenderId":"721601043647"}
[info] i  hosting: Serving hosting files from: build {"metadata":{"emulator":{"name":"hosting"},"message":"Serving hosting files from: \u001b[1mbuild\u001b[22m"}}
[info] +  hosting: Local server: http://localhost:5000 {"metadata":{"emulator":{"name":"hosting"},"message":"Local server: \u001b[4m\u001b[1mhttp://localhost:5000\u001b[22m\u001b[24m"}}
[warn] !  ui: Emulator UI unable to start on port 4000, starting on 4003 instead. {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI unable to start on port 4000, starting on 4003 instead."}}
[debug] [2022-09-26T20:02:42.052Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2022-09-26T20:02:42.053Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2022-09-26T20:02:42.053Z] Starting Emulator UI with command {"binary":"node","args":["--dns-result-order=ipv4first","C:\\Users\\olico\\.cache\\firebase\\emulators\\ui-v1.7.0\\server.bundle.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"--dns-result-order=ipv4first\",\"C:\\\\Users\\\\olico\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.7.0\\\\server.bundle.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2022-09-26T20:02:42.280Z] Web / API server started at localhost:4003
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at localhost:4003\n"}}
[info] i  functions: Watching "F:\Orphic\Just for fun\score-keeper\functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"F:\\Orphic\\Just for fun\\score-keeper\\functions\" for Cloud Functions..."}}
[debug] [2022-09-26T20:02:42.325Z] Validating nodejs source
[warn] !  functions: package.json indicates an outdated version of firebase-functions. Please upgrade using npm install --save firebase-functions@latest in your functions directory. 
[debug] [2022-09-26T20:02:44.079Z] > [functions] package.json contents: {
  "name": "functions",
  "scripts": {
    "lint": "eslint --ext .js,.ts .",
    "build": "tsc",
    "serve": "npm run build && firebase emulators:start",
    "serve:offline": "firebase serve",
    "shell": "npm run build && firebase functions:shell",
    "build:watch": "eslint --fix --ext ts,tsx . && tsc -w",
    "serve:watch": "npm run build | firebase emulators:start --import=./emulated_data --export-on-exit=./emulated_data",
    "start": "npm run shell",
    "deploy": "firebase deploy --only functions",
    "logs": "firebase functions:log"
  },
  "engines": {
    "node": "16"
  },
  "main": "lib/index.js",
  "dependencies": {
    "eslint-config-airbnb-base": "^15.0.0",
    "firebase-admin": "^10.0.2",
    "firebase-functions": "^3.18.0"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^5.12.0",
    "@typescript-eslint/parser": "^5.12.0",
    "eslint": "^8.9.0",
    "eslint-config-google": "^0.14.0",
    "eslint-plugin-import": "^2.25.4",
    "eslint-import-resolver-typescript": "^2.5.0",
    "firebase-functions-test": "^0.2.0",
    "typescript": "^4.5.4"
  },
  "private": true
}
[debug] [2022-09-26T20:02:44.079Z] Building nodejs source
[debug] [2022-09-26T20:02:44.079Z] Analyzing nodejs backend spec
[debug] [2022-09-26T20:02:44.080Z] Could not find functions.yaml. Must use http discovery
[debug] [2022-09-26T20:02:44.725Z] Serving at port 9005

[debug] [2022-09-26T20:02:44.810Z] Got response from /__/functions.yaml {"endpoints":{"carryOver-helloworld":{"platform":"gcfv1","labels":{},"region":["us-central1"],"callableTrigger":{},"entryPoint":"carryOver.helloworld"}},"specVersion":"v1alpha1","requiredAPIs":[]}
[debug] [2022-09-26T20:02:44.818Z] shutdown requested via /__/quitquitquit

[info] +  functions[us-central1-carryOver-helloworld]: http function initialized (http://localhost:5001/score-keeper-2e98b/us-central1/carryOver-helloworld). {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mhttp\u001b[22m function initialized (http://localhost:5001/score-keeper-2e98b/us-central1/carryOver-helloworld)."}}
[info] 
┌─────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! It is now safe to connect your app. │
│ i  View Emulator UI at http://localhost:4003                │
└─────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬─────────────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI             │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Authentication │ localhost:9099 │ http://localhost:4003/auth      │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Functions      │ localhost:5001 │ http://localhost:4003/functions │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Firestore      │ 127.0.0.1:8080 │ http://localhost:4003/firestore │
├────────────────┼────────────────┼─────────────────────────────────┤
│ Hosting        │ localhost:5000 │ n/a                             │
└────────────────┴────────────────┴─────────────────────────────────┘
  Emulator Hub running at localhost:4400
  Other reserved ports: 4500

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2022-09-26T20:03:06.423Z] >>> [apiv2][query] POST http://localhost:5001/functions/projects/score-keeper-2e98b/trigger_multicast [none]
[debug] [2022-09-26T20:03:06.423Z] >>> [apiv2][body] POST http://localhost:5001/functions/projects/score-keeper-2e98b/trigger_multicast {"eventId":"9294e653-c17e-4210-966c-5f4fe9263fac","eventType":"providers/firebase.auth/eventTypes/user.create","resource":{"name":"projects/score-keeper-2e98b","service":"firebaseauth.googleapis.com"},"params":{},"timestamp":"2022-09-26T20:03:06.423Z","data":{"uid":"u74yZX8lYji7VydEX4sUozPDQSwk","email":"olivier@orphic.ca","emailVerified":false,"metadata":{"creationTime":"2022-09-26T20:03:06.422Z","lastSignInTime":"2022-09-26T20:03:06.422Z"},"customClaims":{},"providerData":[{"providerId":"password","email":"olivier@orphic.ca","federatedId":"olivier@orphic.ca","rawId":"olivier@orphic.ca"}]}}
[debug] [2022-09-26T20:03:06.429Z] <<< [apiv2][status] POST http://localhost:5001/functions/projects/score-keeper-2e98b/trigger_multicast 200
[debug] [2022-09-26T20:03:06.429Z] <<< [apiv2][body] POST http://localhost:5001/functions/projects/score-keeper-2e98b/trigger_multicast {"status":"multicast_acknowledged"}
[info] i  To verify the email address olivier@orphic.ca, follow this link: http://localhost:9099/emulator/action?mode=verifyEmail&lang=en&oobCode=oonpWVmyKmsTQCP1CW0qnftn5awTEPL-9KZp4-_qgIpgeFKWrt9vE5&apiKey=fake-api-key&continueUrl=http%3A%2F%2Flocalhost%3A3000%2F%2F%3Ffrom%3DaccountConfirmed {"metadata":{"emulator":{"name":"auth"},"message":"To verify the email address olivier@orphic.ca, follow this link: http://localhost:9099/emulator/action?mode=verifyEmail&lang=en&oobCode=oonpWVmyKmsTQCP1CW0qnftn5awTEPL-9KZp4-_qgIpgeFKWrt9vE5&apiKey=fake-api-key&continueUrl=http%3A%2F%2Flocalhost%3A3000%2F%2F%3Ffrom%3DaccountConfirmed"}}
[debug] [2022-09-26T20:40:14.938Z] >>> [apiv2][query] POST http://localhost:5001/functions/projects/score-keeper-2e98b/trigger_multicast [none]
[debug] [2022-09-26T20:40:14.938Z] >>> [apiv2][body] POST http://localhost:5001/functions/projects/score-keeper-2e98b/trigger_multicast {"eventId":"235830de-ec7c-49d6-a02f-a2790f80a644","eventType":"providers/firebase.auth/eventTypes/user.create","resource":{"name":"projects/score-keeper-2e98b","service":"firebaseauth.googleapis.com"},"params":{},"timestamp":"2022-09-26T20:40:14.938Z","data":{"uid":"suNn7KQYjUl4Y2CzNZzfkx6HWaKR","email":"contact@orphic.ca","emailVerified":false,"metadata":{"creationTime":"2022-09-26T20:40:14.938Z","lastSignInTime":"2022-09-26T20:40:14.937Z"},"customClaims":{},"providerData":[{"providerId":"password","email":"contact@orphic.ca","federatedId":"contact@orphic.ca","rawId":"contact@orphic.ca"}]}}
[debug] [2022-09-26T20:40:14.942Z] <<< [apiv2][status] POST http://localhost:5001/functions/projects/score-keeper-2e98b/trigger_multicast 200
[debug] [2022-09-26T20:40:14.942Z] <<< [apiv2][body] POST http://localhost:5001/functions/projects/score-keeper-2e98b/trigger_multicast {"status":"multicast_acknowledged"}
[info] i  To verify the email address contact@orphic.ca, follow this link: http://localhost:9099/emulator/action?mode=verifyEmail&lang=en&oobCode=lxDNyHIbJ_ZGrAlMh6jrS7J6ubJAhjyA8Bp1mkmIFGCQksdkPPGaiM&apiKey=fake-api-key&continueUrl=http%3A%2F%2Flocalhost%3A3000%2F%2F%3Ffrom%3DaccountConfirmed {"metadata":{"emulator":{"name":"auth"},"message":"To verify the email address contact@orphic.ca, follow this link: http://localhost:9099/emulator/action?mode=verifyEmail&lang=en&oobCode=lxDNyHIbJ_ZGrAlMh6jrS7J6ubJAhjyA8Bp1mkmIFGCQksdkPPGaiM&apiKey=fake-api-key&continueUrl=http%3A%2F%2Flocalhost%3A3000%2F%2F%3Ffrom%3DaccountConfirmed"}}
[info] i  To reset your email address to contact@orphic.ca, follow this link: http://localhost:9099/emulator/action?mode=recoverEmail&lang=en&oobCode=y5kN8B1ViNjoPtBTtztKxhxiWviHjNjBh2SjTMGIojuVN9LvznKbsi&apiKey=fake-api-key {"metadata":{"emulator":{"name":"auth"},"message":"To reset your email address to contact@orphic.ca, follow this link: http://localhost:9099/emulator/action?mode=recoverEmail&lang=en&oobCode=y5kN8B1ViNjoPtBTtztKxhxiWviHjNjBh2SjTMGIojuVN9LvznKbsi&apiKey=fake-api-key"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:52:09.763Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:52:09.763Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't\r\n      // change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission', 'rating_count']));\r\n    }\r\n  }\r\n}\r\n\r\n// TODO user should not be able to update id and permission field"}]}}
[debug] [2022-09-26T20:52:09.837Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:52:09.838Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:52:14.227Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:52:14.227Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't\r\n      // change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n    }\r\n  }\r\n}\r\n\r\n// TODO user should not be able to update id and permission field"}]}}
[debug] [2022-09-26T20:52:14.240Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:52:14.240Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:52:29.841Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:52:29.841Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't\r\n      // change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n      allow create: if request.auth != null;\r\n    }\r\n  }\r\n}\r\n\r\n// TODO user should not be able to update id and permission field"}]}}
[debug] [2022-09-26T20:52:29.854Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:52:29.854Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:52:41.846Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:52:41.847Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't\r\n      // change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n  }\r\n}\r\n\r\n// TODO user should not be able to update id and permission field"}]}}
[debug] [2022-09-26T20:52:41.860Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:52:41.860Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:52:50.454Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:52:50.454Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't\r\n      // change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:52:50.470Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:52:50.470Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:53:00.202Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:53:00.202Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't\r\n      // change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:53:00.218Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:53:00.218Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:53:03.960Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:53:03.960Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:53:03.971Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:53:03.971Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:54:30.280Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:54:30.280Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n    function getUser(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n\r\n}"}]}}
[debug] [2022-09-26T20:54:30.357Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:54:30.357Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":12,"column":14,"currentOffset":455,"endOffset":461},"description":"Unused function: getUser.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":13,"column":14,"currentOffset":483,"endOffset":485},"description":"Invalid function name: get.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:12:14 - WARNING Unused function: getUser. 
[warn] !  ..\firestore.rules:13:14 - WARNING Invalid function name: get. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:54:31.079Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:54:31.079Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n    function getUser(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:54:31.096Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:54:31.096Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":12,"column":14,"currentOffset":455,"endOffset":461},"description":"Unused function: getUser.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":13,"column":14,"currentOffset":483,"endOffset":485},"description":"Invalid function name: get.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:12:14 - WARNING Unused function: getUser. 
[warn] !  ..\firestore.rules:13:14 - WARNING Invalid function name: get. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:54:37.009Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:54:37.009Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n    function isAdmin(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:54:37.024Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:54:37.024Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":12,"column":14,"currentOffset":455,"endOffset":461},"description":"Unused function: isAdmin.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":13,"column":14,"currentOffset":483,"endOffset":485},"description":"Invalid function name: get.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:12:14 - WARNING Unused function: isAdmin. 
[warn] !  ..\firestore.rules:13:14 - WARNING Invalid function name: get. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:54:55.289Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:54:55.289Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n    function isAdmin(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data.permission === 'admin';\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:54:55.305Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:54:55.305Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":13,"column":82,"currentOffset":551,"endOffset":551},"description":"Unexpected '='.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:13:82 - ERROR Unexpected '='. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:55:00.698Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:55:00.698Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n    function isAdmin(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data.permission == 'admin';\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:55:00.711Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:55:00.712Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":12,"column":14,"currentOffset":455,"endOffset":461},"description":"Unused function: isAdmin.","severity":"WARNING"},{"sourcePosition":{"fileName":"security.rules","line":13,"column":14,"currentOffset":483,"endOffset":485},"description":"Invalid function name: get.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:12:14 - WARNING Unused function: isAdmin. 
[warn] !  ..\firestore.rules:13:14 - WARNING Invalid function name: get. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:55:54.579Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:55:54.579Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:55:54.591Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:55:54.592Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:56:37.288Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:56:37.288Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null &\r\n\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:56:37.302Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:56:37.302Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":12,"column":44,"currentOffset":527,"endOffset":527},"description":"token recognition error at: '&\\r'","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[warn] !  ..\firestore.rules:12:44 - ERROR token recognition error at: '&\r' 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:56:41.038Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:56:41.038Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:56:41.049Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:56:41.049Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:56:46.693Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:56:46.693Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:56:46.705Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:56:46.705Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:56:52.500Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:56:52.500Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:56:52.513Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:56:52.513Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":20,"column":7,"currentOffset":832,"endOffset":833},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[warn] !  ..\firestore.rules:20:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:57:03.360Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:57:03.360Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:57:03.372Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:57:03.373Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":20,"column":7,"currentOffset":831,"endOffset":832},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[warn] !  ..\firestore.rules:20:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:57:16.831Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:57:16.831Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:57:16.843Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:57:16.843Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":19,"column":7,"currentOffset":760,"endOffset":761},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[warn] !  ..\firestore.rules:19:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:57:21.988Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:57:21.988Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:57:21.999Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:57:21.999Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:57:23.365Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:57:23.365Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:57:23.379Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:57:23.379Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:57:33.229Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:57:33.229Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:57:33.241Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:57:33.242Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":17,"column":7,"currentOffset":713,"endOffset":714},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[warn] !  ..\firestore.rules:17:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:57:59.284Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:57:59.284Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && if (resource.data.permission != 'admin');\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:57:59.297Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:57:59.298Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"},{"sourcePosition":{"fileName":"security.rules","line":16,"column":48,"currentOffset":706,"endOffset":707},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[warn] !  ..\firestore.rules:16:48 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:58:15.704Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:58:15.704Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null &&\r\n      if resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:58:15.717Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:58:15.717Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":10,"column":7,"currentOffset":391,"endOffset":392},"description":"Unexpected 'if'.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:10:7 - ERROR Unexpected 'if'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:58:20.563Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:58:20.563Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null && resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:58:20.581Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:58:20.581Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":44,"currentOffset":824,"endOffset":829},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:18:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:58:29.504Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:58:29.504Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null && resource.data.permission == 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:58:29.520Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:58:29.520Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":44,"currentOffset":824,"endOffset":829},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:18:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:58:31.361Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:58:31.361Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null && resource.data.permission = 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:58:31.373Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:58:31.373Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":9,"column":73,"currentOffset":409,"endOffset":409},"description":"Unexpected '='.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:9:73 - ERROR Unexpected '='. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:58:32.149Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:58:32.149Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null && resource.data.permission != 'admin';\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:58:32.169Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:58:32.169Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":44,"currentOffset":824,"endOffset":829},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:18:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:58:53.714Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:58:53.714Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null ;\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:58:53.731Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:58:53.731Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":44,"currentOffset":786,"endOffset":791},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:18:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:58:55.143Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:58:55.143Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission']));\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:58:55.159Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:58:55.159Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":44,"currentOffset":785,"endOffset":790},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:18:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:59:14.927Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:59:14.927Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:59:14.947Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:59:14.947Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":44,"currentOffset":815,"endOffset":820},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:18:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:59:19.118Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:59:19.118Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:59:19.137Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:59:19.138Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":19,"column":44,"currentOffset":823,"endOffset":828},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:19:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:59:29.981Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:59:29.981Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null && resource.data.permission != 'admin';\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:59:29.995Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:59:29.995Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":21,"column":44,"currentOffset":827,"endOffset":832},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:21:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:59:39.342Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:59:39.342Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null;\r\n\r\n      allow create: if request.auth != null\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:59:39.357Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:59:39.357Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":21,"column":44,"currentOffset":788,"endOffset":793},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:21:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:59:46.973Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:59:46.973Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if request.auth != null;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:59:46.987Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:59:46.987Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":21,"column":44,"currentOffset":789,"endOffset":794},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:21:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T20:59:55.894Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T20:59:55.895Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: false;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T20:59:55.905Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T20:59:55.905Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":18,"column":21,"currentOffset":672,"endOffset":676},"description":"Missing 'if' before conditional expression.","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:18:21 - ERROR Missing 'if' before conditional expression. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T21:00:03.114Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T21:00:03.114Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if false;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth.uid == userId;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T21:00:03.129Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T21:00:03.129Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":21,"column":44,"currentOffset":774,"endOffset":779},"description":"Invalid variable name: userId.","severity":"WARNING"}]}
[warn] !  ..\firestore.rules:21:44 - WARNING Invalid variable name: userId. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T21:00:31.299Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T21:00:31.299Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if false;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth != null;\r\n      allow read: if request.auth != null\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T21:00:31.312Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T21:00:31.312Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T21:01:09.587Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T21:01:09.587Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if false;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth != null &&\r\n      ;\r\n      allow read: if request.auth != null\r\n    }\r\n    function getUser(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T21:01:09.598Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T21:01:09.598Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":22,"column":7,"currentOffset":785,"endOffset":785},"description":"mismatched input ';' expecting {'--', '++', '{', '[', '(', '-', '!', '/', 'false', 'null', 'true', PATH_SEGMENT, IDENTIFIER, NUM_INT, NUM_FLOAT, UNPAIRED_DOUBLE_QUOTE, UNPAIRED_SINGLE_QUOTE, STRING, BYTES}","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:22:7 - ERROR mismatched input ';' expecting {'--', '++', '{', '[', '(', '-', '!', '/', 'false', 'null', 'true', PATH_SEGMENT, IDENTIFIER, NUM_INT, NUM_FLOAT, UNPAIRED_DOUBLE_QUOTE, UNPAIRED_SINGLE_QUOTE, STRING, BYTES} 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T21:01:10.959Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T21:01:10.960Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if false;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth != null &&\r\n      ;\r\n      allow read: if request.auth != null\r\n    }\r\n\r\n    function getUser(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T21:01:10.971Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T21:01:10.971Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"issues":[{"sourcePosition":{"fileName":"security.rules","line":22,"column":7,"currentOffset":785,"endOffset":785},"description":"mismatched input ';' expecting {'--', '++', '{', '[', '(', '-', '!', '/', 'false', 'null', 'true', PATH_SEGMENT, IDENTIFIER, NUM_INT, NUM_FLOAT, UNPAIRED_DOUBLE_QUOTE, UNPAIRED_SINGLE_QUOTE, STRING, BYTES}","severity":"ERROR"}]}
[warn] !  ..\firestore.rules:22:7 - ERROR mismatched input ';' expecting {'--', '++', '{', '[', '(', '-', '!', '/', 'false', 'null', 'true', PATH_SEGMENT, IDENTIFIER, NUM_INT, NUM_FLOAT, UNPAIRED_DOUBLE_QUOTE, UNPAIRED_SINGLE_QUOTE, STRING, BYTES} 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T21:01:35.141Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T21:01:35.141Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if false;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth != null &&\r\n      getUser(request.auth.uid).permission == 'admin';\r\n      allow read: if request.auth != null\r\n    }\r\n\r\n    function getUser(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T21:01:35.164Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T21:01:35.164Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T21:01:48.698Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T21:01:48.698Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if false;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth != null &&\r\n      getUser(request.auth.uid).permission == 'admin';\r\n      allow read: if request.auth != null &&\r\n      getUser(request.auth.uid).permission == 'admin';\r\n    }\r\n\r\n    function getUser(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T21:01:48.719Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T21:01:48.719Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T21:01:58.811Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T21:01:58.811Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      allow update: if false;\r\n\r\n      allow create: if request.auth != null;\r\n      allow delete: if request.auth != null &&\r\n      getUser(request.auth.uid).permission == 'admin';\r\n      allow read: if request.auth != null &&\r\n      getUser(request.auth.uid).permission == 'admin';\r\n    }\r\n\r\n    function getUser(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T21:01:58.827Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T21:01:58.827Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2022-09-26T21:02:05.991Z] >>> [apiv2][query] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules [none]
[debug] [2022-09-26T21:02:05.991Z] >>> [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\r\nservice cloud.firestore {\r\n  match /databases/{database}/documents {\r\n    match /Users/{userId} {\r\n      // Allow the user to update a document only if that document doesn't change the permission\r\n      allow update: if (!request.resource.data.diff(resource.data).affectedKeys()\r\n      .hasAny(['permission'])) && \r\n      request.auth.uid == userId;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth.uid == userId;\r\n\r\n      allow read: if request.auth != null\r\n    }\r\n    match /Logs/{logId} {\r\n      allow update: if false;\r\n\r\n      allow create: if request.auth != null;\r\n\r\n      allow delete: if request.auth != null &&\r\n      getUser(request.auth.uid).permission == 'admin';\r\n\r\n      allow read: if request.auth != null &&\r\n      getUser(request.auth.uid).permission == 'admin';\r\n    }\r\n\r\n    function getUser(id) {\r\n      return get(/databases/$(database)/documents/Users/$(id)).data;\r\n    }\r\n  }\r\n}"}]}}
[debug] [2022-09-26T21:02:06.015Z] <<< [apiv2][status] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules 200
[debug] [2022-09-26T21:02:06.015Z] <<< [apiv2][body] PUT http://127.0.0.1:8080/emulator/v1/projects/score-keeper-2e98b:securityRules {}
[info] +  firestore: Rules updated. 
